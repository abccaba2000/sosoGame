==Section 1==

1.

	Guess		Actual

	1			1
	2			2
	3			3
	4			4
	5			5

2.

	Guess		Actual

	0			0
	1			1
	2			2
	3			3
	4			4

3.

	Guess		Actual

	5			5

4.

	Guess		Actual

	25			25

5.

	Guess		Actual

	0 0			0 0
	0 1			0 1
	0 2			0 2
	0 3			0 3
	0 4			0 4
	1 0			1 0
	1 1			1 1
	1 2			1 2
	1 3			1 3
	1 4			1 4
	2 0			2 0
	2 1			2 1
	2 2			2 2
	2 3			2 3
	2 4			2 4
	3 0			3 0
	3 1			3 1
	3 2			3 2
	3 3			3 3
	3 4			3 4
	4 0			4 0
	4 1			4 1
	4 2			4 2
	4 3			4 3
	4 4			4 4

6.

	Guess		Actual

	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*
	*			*

7.

	Guess		Actual

	*****		*****
	*****		*****
	*****		*****
	*****		*****
	*****		*****

8.

	Guess						Actual

	*************************	*************************


9.

	First, the variable 'i' would change in each iteration, so we should use another variable instead of 'i' to record the summation.

	Second, the statement "for i in my_list" means that 'i' is one of the element of 'my_list' in each iteration, not the index if 'my_list'. We could fix the code by 2 ways :

		1. "for i in my_list : " -> "for i in range(len(my_list)) : "
		2. "my_list[i]" -> 'i'

	Fixed Code :

	my_list = [5, 8, 10, 4, 5]
	sum = 0
	for i in range(len(my_list)) :
		sum = sum + my_list[i]
	print(sum)

10.

	Guess		Actual

	5			5

11.

	Guess		

	Repeat :

	a1a2a3a4a5	(a = 0 or 1)
	...			...
	...			...
	
	Until user keyin 'y', and then print "Bye!" and end the program.


	Actual

	Repeat :

	a1a2a3a4a5	(a = 0 or 1)
	Play again? y
	...			...
	Play again? y
	...			...
	
	Until user keyin not 'y', and then print "Bye!" and end the program.

12.

	Guess		Actual

	3			3

13.

	Guess		Actual

	4			4
	3			3

14.
	
	Guess		Actual

	4
	3


15.

	Guess					

	'z' is not defined in main scope


	Actual

	4
	Traceback (most recent call last):
	  File "t1.py", line 6, in <module>
		print(z)
	NameError: name 'z' is not defined

	
	Review

	Python is "interpreted", not "compiled", would execute until error occur.

16.

	Guess		Actual

	x= 10		x= 10
	x= 11		x= 11
	x= 10		x= 10

17.

	Guess		Actual

	f start		f start
	g start		g start
	h			h
	g end		g end
	h			h
	f end		f end

18.

	Guess					Actual

	x= 10					x= 10
	foo has been called		foo has been called
	x= 10					x= 10

19.

	Guess		Actual

	main 1		main 1
	a 1			a 1
	a 2			a 2
	main 1		main 1
	main 5		main 5
	b 5			b 5
	b 6			b 6
	main 6		main 6
	main 5		main 5
	c 5			c 5
	c 102		c 102
	main 102	main 5


	Review

	Python function call by the copy (value) of the reference.


==Section 2==


1.

	def sum(a, b, c) :
		print(a + b + c)

	sum(10, 11, 12)


2.

	def increase(x) :
		return x + 1

	x = 10
	
	print("X is", x, "I will now increase x.")

	x = increase(x)

	print("X is now", x)


3.

	def print_hello() :
		print("Hello")

	print_hello()


4.

	def count_to_ten() :
		for i in range(11) :
			print(i)

	count_to_ten()


5.

	def sum_list(list) :

		sum = 0

		for i in list :
			sum += i

		return sum

	list = [45, 2, 10, -5, 100]
	print(sum_list(list))


6.

	def reverse(text) :

		result = ""

		text_length = len(text)

		for i in range(text_length) :
			result += text[(i+1) * -1]

		return result

	text = "Programming is the coolest thing ever."

	print(reverse(text))


7.

	def get_user_choice() :

		preserved_command = ('f', 'm', 's', 'd', 'q')

		while True :

			command = input("Command: ")

			for command_index in preserved_command :
				if command == command_index :
					return command

			print("Hey, that's not a command. Here are your options:" )
			print("f - Full speed ahead")
			print("m - Moderate speed")
			print("s - Status")
			print("d - Drink")
			print("q - Quit")

	user_command = get_user_choice()

	print("You've entered:", user_command)


==Section 3==

1. 2.

	def print_hello_world() :
		print("Hello World.")

	print_hello_world()


3. 4.

	def greeting(name) :
		print("Hello", name)

	greeting("Bob")


5. 6.

	def product(a, b) :
		print(a * b)

	product(3, 9)


7. 8.

	def repeat_str(phrase, count) :

		for index in range(count) :
			print(phrase)

	repeat_str("hahaha", 10)


9. 10.

	def square(num) :
		return num ** 2

	print(square(9))


11. 12.

	def centrifugal_force(mass, radius, ang_velo) :

		return mass * (ang_velo ** 2 / radius)

	print(centrifugal_force(1, 3, 4))


13.

	def print_list(list) :

		for item in list :
			print(item)













